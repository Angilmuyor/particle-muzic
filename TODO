#particle.py object + nodes

particle properties to processing:
- composition -> matched to quark properties
- mass -> renormalized where?-> radius
- id -> for tracking
- time to decay -> renormalized where?
- charge ->
- other quantum numbers?
- type -> to be able to build processing part object

who handles the position? -> the particle class in processing

if ParticleBoosted
also:
angles
speed


#processing particle

class for bosons
position handling
methods in & out












- one particle class
- explore pypdt pid methods
- unique id for the particle (attrbute) + number of particles (global/static attribute)

- attributes
  - name (input, according to ParticleDataTool names)
  - pdgid (tandard PDG ids, from ParticleDataTool)
  - uniqueid (successive integer)

  - mass (from pypdt)
  - charge (from pypdt)
  - lifetime (from pypdt)
  - ctau  ---NO
  - width ---NO

  - decay_channels (BR + particles, from ParticleDataTool)

  - particle family (lepton, meson, baryon, boson, quark)
  - fundamental
  - composition
  - antiparticle
  - spin
  - Parity
  - Isospin
  - J
  - strangeness
  - Charm
  - bottomness
  - latex

  - methods
